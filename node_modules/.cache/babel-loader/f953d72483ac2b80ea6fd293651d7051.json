{"remainingRequest":"/home/tom/Documents/contracts/consensus-networks/healthlink-dashboard/node_modules/babel-loader/lib/index.js!/home/tom/Documents/contracts/consensus-networks/healthlink-dashboard/node_modules/eslint-loader/index.js??ref--13-0!/home/tom/Documents/contracts/consensus-networks/healthlink-dashboard/src/store.js","dependencies":[{"path":"/home/tom/Documents/contracts/consensus-networks/healthlink-dashboard/src/store.js","mtime":1562283654029},{"path":"/home/tom/Documents/contracts/consensus-networks/healthlink-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tom/Documents/contracts/consensus-networks/healthlink-dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/tom/Documents/contracts/consensus-networks/healthlink-dashboard/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    resources: []\n  },\n  mutations: {\n    auth_request: function auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success: function auth_success(state, token) {\n      state.status = 'success';\n      state.token = token;\n    },\n    auth_error: function auth_error(state) {\n      state.status = 'error';\n    },\n    query_request: function query_request(state) {\n      state.status = 'loading';\n    },\n    query_success: function query_success(state, resources) {\n      state.status = 'success';\n      state.resources = resources;\n    },\n    query_error: function query_error(state) {\n      state.status = 'success';\n      state.resources = [];\n    },\n    logout: function logout(state) {\n      state.status = '';\n      state.token = '';\n    }\n  },\n  actions: {\n    login: function login(_ref, user) {\n      var _this = this;\n\n      var commit = _ref.commit;\n      commit('auth_request');\n      axios({\n        url: 'http://localhost:9090/api/auth/',\n        data: user,\n        method: 'POST'\n      }).then(function (resp) {\n        var token = resp.data;\n        console.log(resp.data);\n        localStorage.setItem('token', token); // Add the following line:\n\n        axios.defaults.headers.common['Authorization'] = _this.$store.state.token;\n        commit('auth_success', token);\n        console.log('token is now ' + _this.$store.state.token);\n        resolve(resp);\n      }).catch(function (err) {\n        commit('auth_error');\n        localStorage.removeItem('token'); //reject(err)\n      });\n    },\n    query: function query(_ref2) {\n      var commit = _ref2.commit;\n      commit('query_request');\n      axios({\n        url: 'http://localhost:9090/api/fhir/Patient/123',\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem('token')\n        },\n        method: 'GET'\n      }).then(function (resp) {\n        var resources = resp.data;\n        console.log(resp);\n        localStorage.setItem('resources', resources);\n        commit('query_success', resources);\n        resolve(resp);\n      }).catch(function (err) {\n        commit('auth_error');\n        localStorage.removeItem('token'); //reject(err)\n      });\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        commit('logout');\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    }\n  }\n});",{"version":3,"sources":["/home/tom/Documents/contracts/consensus-networks/healthlink-dashboard/src/store.js"],"names":["Vue","Vuex","axios","use","Store","state","status","token","localStorage","getItem","resources","mutations","auth_request","auth_success","auth_error","query_request","query_success","query_error","logout","actions","login","user","commit","url","data","method","then","resp","console","log","setItem","defaults","headers","common","$store","resolve","catch","err","removeItem","query","Authorization","Promise","reject","getters","isLoggedIn","authStatus"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n\tstate: {\n  \t\tstatus: '',\n  \t\ttoken: localStorage.getItem('token') || '',\n  \t\tresources : []\n\t},\n\tmutations: {\n\t\tauth_request(state){\n\t    \tstate.status = 'loading'\n\t  \t},\n\t  \tauth_success(state, token){\n\t\t    state.status = 'success'\n\t\t    state.token = token\n\t  \t},\n\t  \tauth_error(state){\n\t    \tstate.status = 'error'\n\t  \t},\n\t  \tquery_request(state){\n\t  \t\tstate.status = 'loading'\n\t  \t},\n\t  \tquery_success(state, resources){\n\t  \t\tstate.status = 'success'\n\t  \t\tstate.resources = resources\n\t  \t},\n\t  \tquery_error(state){\n\t  \t\tstate.status = 'success'\n\t  \t\tstate.resources = []\n\t  \t},\n\t  \tlogout(state){\n\t    \tstate.status = ''\n\t    \tstate.token = ''\n\t  \t},\n\t},\n\tactions: {\n\t  \tlogin({commit}, user){\n\t            commit('auth_request')\n\t            axios({url: 'http://localhost:9090/api/auth/', \n\t            \tdata: user,\n\t            \tmethod: 'POST' })\n\t            .then(resp => {\n\t                const token = resp.data\n\t                console.log(resp.data)\n\t                localStorage.setItem('token', token)\n\t                // Add the following line:\n\t                axios.defaults.headers.common['Authorization'] = this.$store.state.token\n\t                commit('auth_success', token)\n\t                console.log('token is now '+ this.$store.state.token)\n\t                resolve(resp)\n\t            })\n\t            .catch(err => {\n\t                commit('auth_error')\n\t                localStorage.removeItem('token')\n\t                //reject(err)\n\t            })\n\t    },\n\t  \tquery({commit}){\n\t            commit('query_request')\n\t            axios({url: 'http://localhost:9090/api/fhir/Patient/123', \n\t            \theaders: { Authorization: \"Bearer \" + localStorage.getItem('token') },\n\t            \tmethod: 'GET' })\n\t            .then(resp => {\n\t                const resources = resp.data\n\t                console.log(resp)\n\t                localStorage.setItem('resources', resources)\n\t                commit('query_success', resources)\n\t                resolve(resp)\n\t            })\n\t            .catch(err => {\n\t                commit('auth_error')\n\t                localStorage.removeItem('token')\n\t                //reject(err)\n\t            })\n\t    },\n\t \tlogout({commit}){\n\t\t    return new Promise((resolve, reject) => {\n\t\t      \tcommit('logout')\n\t\t      \tlocalStorage.removeItem('token')\n\t\t      \tdelete axios.defaults.headers.common['Authorization']\n\t\t      \tresolve()\n\t\t    })\n\t  \t}\n\t},\t\n\tgetters : {\n\t  isLoggedIn: state => !!state.token,\n\t  authStatus: state => state.status,\n\t}\n})"]}]}